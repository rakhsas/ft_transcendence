version: "3.8"

services:
  backend:
    container_name: backend
    image: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - node_modules_back:/app/node_modules
    networks:
      - backend
  frontend:
    container_name: frontend
    image: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4200:4200"
    depends_on:
      - backend
    networks:
      - backend
    volumes:
      - ./frontend:/app
      - node_modules_front:/app/node_modules
    environment:
      # - CHOKIDAR_USEPOLLING=true
      - CHOKIDAR_USEPOLLING=true
  postgres:
    container_name: postgres
    image: postgres:latest
    ports:
      - "5433:5432"
    volumes:
      - ./postgres:/app
    networks:
      - backend
    environment :
      - POSTGRES_DB=db1
      - POSTGRES_PASSWORD=root
      - POSTGRES_USERNAME=root
    restart: always
  adminer:
    container_name: adminer
    image: adminer
    ports:
      - "8081:8080"
    networks:
      - backend
    restart: always

networks:
  backend:
    name: backend
    driver: bridge

volumes:
  node_modules_back:
    name: node_modules_back
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/backend/node_modules
  node_modules_front:
    name: node_modules_front
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/frontend/node_modules
